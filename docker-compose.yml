networks: {}
services:
  arch-delugevpn:
    cap_add:
    - NET_ADMIN
    container_name: delugevpn
    environment:
    - DEBUG=false
    - ENABLE_PRIVOXY=yes
    - LAN_NETWORK=${CIDR_ADDRESS}
    - NAME_SERVERS=8.8.8.8,8.8.4.4
    - PGID=${PGID}
    - PUID=${PUID}
    - STRONG_CERTS=no
    - VPN_DEVICE_TYPE=tun
    - VPN_ENABLED=yes
    - VPN_PASS=${PIAPASS}
    - VPN_PORT=1198
    - VPN_PROTOCOL=udp
    - VPN_PROV=pia
    - VPN_REMOTE=us-east.privateinternetaccess.com
    - VPN_USER=${PIAUNAME}
    image: binhex/arch-delugevpn
    network_mode: bridge
    networks:
      default:
        aliases: []
    ports:
    - "${IP_ADDRESS}:58846:58846"
    - "${IP_ADDRESS}:58946:58946"
    - "${IP_ADDRESS}:8112:8112"
    - "${IP_ADDRESS}:8118:8118"
    restart: always
    volumes:
    - ./content:/data
    - ./delugevpn/config:/config
    - /etc/localtime:/etc/localtime:ro
  couchpotato:
    container_name: couchpotato
    environment:
    - PGID=${PGID}
    - PUID=${PUID}
    image: linuxserver/couchpotato
    network_mode: bridge
    networks:
      default:
        aliases: []
    ports:
    - "${IP_ADDRESS}:5050:5050"
    restart: always
    volumes:
    - ./couchpotato:/config
    - ./content/downloads:/downloads
    - ./content/movies:/movies
    - /etc/localtime:/etc/localtime:ro
  home-assistant:
    image: homeassistant/home-assistant:latest
    networks:
      default:
        aliases: []
    volumes: []
  minio:
    command: server /export
    container_name: minio
    environment:
    - MINIO_ACCESS_KEY=minio
    - MINIO_SECRET_KEY=minio123
    image: minio/minio
    network_mode: bridge
    networks:
      default:
        aliases: []
    ports:
    - "${IP_ADDRESS}:9009:9000"
    restart: always
    volumes:
    - ${PWD}:/export
  muximux:
    image: linuxserver/muximux:latest
    networks:
      default:
        aliases: []
    volumes: []
  ombi:
    container_name: ombi
    environment:
    - PGID=${PGID}
    - PUID=${PUID}
    image: rogueosb/ombi
    network_mode: bridge
    networks:
      default:
        aliases: []
    ports:
    - "${IP_ADDRESS}:3579:3579"
    restart: always
    volumes:
    - ./ombi:/config
  plex:
    container_name: plex
    environment:
    - ADVERTISE_IP=http://${IP_ADDRESS}:32400/
    - ALLOWED_NETWORKS=${CIDR_ADDRESS}
    - PLEX_CLAIM=${PMSTOKEN}
    - PLEX_GID=${PGID}
    - PLEX_UID=${PUID}
    hostname: ${HOSTNAME}
    image: plexinc/pms-docker:${PMSTAG}
    network_mode: host
    networks:
      default:
        aliases: []
    ports:
    - "${IP_ADDRESS}:3005:3005/tcp"
    - "${IP_ADDRESS}:32400:32400/tcp"
    - "${IP_ADDRESS}:32469:32469/tcp"
    - "${IP_ADDRESS}:32412:32412/udp"
    - "${IP_ADDRESS}:32414:32414/udp"
    - "${IP_ADDRESS}:32410:32410/udp"
    - "${IP_ADDRESS}:8324:8324/tcp"
    - "${IP_ADDRESS}:32413:32413/udp"
    - "${IP_ADDRESS}:1900:1900/udp"
    restart: always
    volumes:
    - ./plex:/config
    - ./plex/transcode:/transcode
    - ./content/tv:/data/tvshows
    - ./content/movies:/data/movies
    - /etc/localtime:/etc/localtime:ro
  plexconnect:
    image: varju/plexconnect:latest
    networks:
      default:
        aliases: []
    volumes: []
  plexpy:
    container_name: plexpy
    depends_on:
    - plex
    environment:
    - PGID=${PGID}
    - PUID=${PUID}
    image: linuxserver/plexpy
    network_mode: bridge
    networks:
      default:
        aliases: []
    ports:
    - "${IP_ADDRESS}:8181:8181"
    restart: always
    volumes:
    - ./plexpy:/config
    - ./plex/Library/Application Support/Plex Media Server/Logs:/logs:ro
    - /etc/localtime:/etc/localtime:ro
  portainer:
    command: ${PORTAINERSTYLE}
    container_name: portainer
    image: portainer/portainer
    network_mode: bridge
    networks:
      default:
        aliases: []
    ports:
    - "${IP_ADDRESS}:9000:9000"
    restart: always
    volumes:
    - ./portainer:/data
    - /var/run/docker.sock:/var/run/docker.sock
    - /etc/localtime:/etc/localtime:ro
  radarr:
    container_name: radarr
    environment:
    - PGID=${PGID}
    - PUID=${PUID}
    image: linuxserver/radarr
    network_mode: bridge
    networks:
      default:
        aliases: []
    ports:
    - "${IP_ADDRESS}:7878:7878"
    restart: always
    volumes:
    - ./radarr:/config
    - ./content/complete:/downloads
    - ./content/movies:/movies
    - /etc/localtime:/etc/localtime:ro
  sickrage:
    container_name: sickrage
    environment:
    - PGID=${PGID}
    - PUID=${PUID}
    image: linuxserver/sickrage
    network_mode: bridge
    networks:
      default:
        aliases: []
    ports:
    - "${IP_ADDRESS}:8081:8081"
    restart: always
    volumes:
    - ./sickrage:/config
    - ./content/downloads:/downloads
    - ./content/tv:/tv
    - /etc/localtime:/etc/localtime:ro
  sonarr:
    image: linuxserver/sonarr:latest
    networks:
      default:
        aliases: []
    volumes: []
  ubooquity:
    image: linuxserver/ubooquity:latest
    networks:
      default:
        aliases: []
    restart: unless-stopped
    volumes: []
  uhttpd:
    container_name: uhttpd
    environment:
    - PGID=${PGID}
    - PUID=${PUID}
    image: fnichol/uhttpd
    network_mode: bridge
    networks:
      default:
        aliases: []
    ports:
    - "${IP_ADDRESS}:80:80"
    restart: always
    volumes:
    - ./www:/www
  unifi:
    image: linuxserver/unifi:latest
    networks:
      default:
        aliases: []
    volumes: []
version: "2"
volumes: {}
